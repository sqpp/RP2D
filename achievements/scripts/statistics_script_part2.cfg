
--==== Knife and He Kills Statistics ====--
function stat_knife_and_hekills(killer,victim, wpn)
	if (killer ~= victim) then
		if (wpn == 50) then
			IncreaseUserValue(killer,"KnifeKills",1)
		end
		if (wpn == 51) then
			IncreaseUserValue(killer,"HeKills",1)
		end
	end
end

function stat_knifekills_variable(id)
	return(GetUserValue(id,"KnifeKills"))
end

function stat_hekills_variable(id)
	return(GetUserValue(id,"HeKills"))
end

--==== Flags Captured Statistics ====--
function stat_captured_Variables(id)
	return(GetUserValue(id,"FlagsCaptured"))
end

function stat_flagcapture(id)
	IncreaseUserValue(id,"FlagsCaptured",1)
end

--==== Flags Dominated Statistics ====--
function stat_dominated_Variables(id)
	return(GetUserValue(id,"DominatedPoints"))
end
function stat_dominate(id)
	IncreaseUserValue(id,"DominatedPoints",1)
end

--==== Favorite Pistol and Pistol Kills Statistics ====--
function stat_pistolhits(victim,killer,wpn,hp,ap)
	if (killer ~= victim and wpn > 0 and wpn < 10) then
		IncreaseUserValue(killer,"PistolHitsByID_"..wpn,1)
		IncreaseUserValue(killer,"PistolDamage",hp)
	end
end

function stat_favoritepistol_Variable(id)
	local maxWeaponID = stat_favoritepistol_Compare(id)
	if (maxWeaponID == 0) then
		StatsManager.data["Fav. Pistol"].image = "gfx/weapons/usp_k.bmp"
		return("none yet")
	end
	local weaponName = itemtype(maxWeaponID,"name")
	if (maxWeaponID == 6) then
		StatsManager.data["Fav. Pistol"].image = "gfx/weapons/fiveseven_d.bmp<m>"
	else
		StatsManager.data["Fav. Pistol"].image = "gfx/weapons/"..weaponName:gsub("%s+", "").."_m.bmp<m>"
	end
	return(weaponName)
end

function stat_favoritepistol_Compare(id)
	local maxWeaponID = 0
	local maxWeaponHits = 0
	for i = 1, 6 do
		hits = GetUserValue(id,"PistolHitsByID_"..i)
		if (hits > maxWeaponHits) then
			maxWeaponID = i
			maxWeaponHits = hits
		end
	end
	return(maxWeaponID)
end

function stat_pistoldamage_Compare(id)
	return(GetUserValue(id,"PistolDamage"))

end
--==== Pistol Kills Statistics ====--
function stat_pistolkills(killer,victim,wpn)
	if (killer ~= victim and wpn > 0 and wpn < 10) then
		IncreaseUserValue(killer,"PistolKills",1)
	end
end
function stat_pistolkills_Compare(id)
	return(GetUserValue(id,"PistolKills"))
end

--==== Pistol Round Statistics ====--
function stat_pistolround_Variables(id)
	return(GetUserValue(id,"PistolRoundWins"))
end

function stat_pistolroundplayed_Variables(id)
	return(GetUserValue(id,"PistolRoundPlayed"))
end

pistolRound = false

function stat_pistolround()
	pistolRound = false
	local leastMoney = 16000
	for m, p in pairs(player(0,"table")) do
		if (player(p,"money") < leastMoney) then
			leastMoney = player(p,"money")
		end
	end
	if (leastMoney < 1250) then
		pistolRound = true
	end
end

function stat_pistolroundend(id,m)
	if (pistolRound == true) then
		local team = player(id,"team")
		if (team == m) or (team == m - 9) or (team == m - 19) or (team == m - 39) or (team == m - 49) or (team == m - 59)  then
			IncreaseUserValue(id,"PistolRoundWins",1)
		end
		IncreaseUserValue(id,"PistolRoundPlayed",1)
	end
	pistolRound = false
end

--==== MVP Statistics ====--
function stat_mvp_Variables(id)
	return(GetUserValue(id,"MVP"))
end

function stat_init_mvp(id)
	stat_mvp.kills[id] = 0
end

function stat_check_mvp(id)
	local mostKills = 0
	local kID = 0
	local team = player(id,"team")
	local count = 0
	for m, p in pairs(player(0,"table")) do
		if (team == player(p,"team")) then
			count = count + 1
			if (stat_mvp.kills[p] ~= nil and stat_mvp.kills[p] > mostKills) then
				mostKills = stat_mvp.kills[p] 
				kID = p
			end
		end
	end
	if (kID == id and count > 3) then
		IncreaseUserValue(id,"MVP",1)
	end
end

function stat_kill_mvp(killer,victim)
	if (killer ~= victim) then
		if stat_mvp.kills[killer] ~= nil then
			stat_mvp.kills[killer]  = stat_mvp.kills[killer]  + 1
		end
	end
end

stat_mvp = { kills = {} }

--==== Shield Statistics ====--
function stat_shield_Variables(id)
	return(GetUserValue(id,"ShieldHit",1))
end

function stat_shieldhit(id)
	IncreaseUserValue(id,"ShieldHit",1)
end

--==== Money Spent Statistics ====--
function stat_moneyspent_Variables(id)
	local money = stat_moneyspent_Compare(id)
	if money > 1000000 then
		money = math.floor(money / 1000).."K"
	end
	return(money.."$")
end

function stat_moneyspent_Compare(id)
	return(GetUserValue(id,"MoneySpent"))
end

function stat_moneyspent(id,w)
	local price = itemtype(w,"price")
	if (player(id,"money") >= price) then
		IncreaseUserValue(id,"MoneySpent",price)
	end
end
