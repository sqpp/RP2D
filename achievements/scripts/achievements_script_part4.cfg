-- ==== Second To None
SecondToNoneTimer = 0

function bomb_defusingseconds(id)
	SecondToNoneTimer = SecondToNoneTimer - 1
end

function bomb_defusingplant(id)
	SecondToNoneTimer = tonumber(game("mp_c4timer")) + 1
end
function bomb_defusings(id)
	if (SecondToNoneTimer < 3) then
		OpenUnlockAchievement(id,"SecondToNone")
	end
end



-- ==== Knife On Knife
function kill_KnifeOnKnife(killer,victim,w)
	if (w == 50 and player(victim,"weapontype") == 50) then
		OpenUnlockAchievement(killer,"KnifeOnKnife")
	end
end


-- ==== Blind Fury 
function blindfury_flash(id,w,zx,zy)
	if (w == 52) then
		if GetUserValue(id,"SuccessFlashbang") > 4 then
			OpenUnlockAchievement(id,"BlindFury")
		end
	end
end

function blindfury_progress(id)
	return(GetUserValue(id,"SuccessFlashbang") / 5)
end


-- ==== Premature Burial
function kill_PrematureBurial(killer,victim,w)
	if (w == 51 and player(killer,"health") < 1) then
		OpenUnlockAchievement(killer,"PrematureBurial")
	end
end


-- ==== Mercy Rule
function endround_MercyRule(m)
	local alive = true
	if (m ~= 1 and m ~= 2) then
		return
	end
	local teamTable = player(0,"team"..m)
	if (#teamTable < 4) then
		return
	end
	for m, p in pairs(teamTable) do
		if player(p,"health") < 1 then
			alive = false
		end
	end
	if alive then
		for m, p in pairs(teamTable) do
			OpenUnlockAchievement(p,"MercyRule")
		end
	end
end


--==== Ballistic
BallisticTimer = 0
BallisticKills = {}

function second_Ballistic()
	BallisticTimer = BallisticTimer + 1
end
function startround_Ballistic()
	BallisticTimer = 0
	for i = 0, 32 do
		BallisticKills[i] = 0
	end
end

function BallisticSpawn(id)
	BallisticKills[id] = 0
end

function kill_Ballistic(killer)
	BallisticKills[killer] = BallisticKills[killer] + 1
	if BallisticKills[killer] > 3 and BallisticTimer < 16 then
		OpenUnlockAchievement(killer,"Ballistic")
	end
end

startround_Ballistic()

-- Build and Upgrade Achievements
function ACHIEVEMENT_ObjectBuild(id,type,x,y,mode)
	if type == 8 then
		OpenUnlockAchievement(id,"BuildTurret")
	end
end

function ACHIEVEMENT_ObjectUpgrade(id,p,z,t)
	if (z == t) then
		if (object(id,"type") == 8) then
			OpenUnlockAchievement(p,"UpgradeTurret")
			IncreaseUserValue(p,"UpgradedTurrets",1)
		end
		if (object(id,"type") == 9) then
			IncreaseUserValue(p,"UpgradedSupplies",1)
		end
	end
	if (GetUserValue(p,"UpgradedTurrets") > 4) then
		OpenUnlockAchievement(p,"TurretPower")
	end
	if (GetUserValue(p,"UpgradedSupplies") > 2) then
		OpenUnlockAchievement(p,"NeverGonnaGiveYouUp")
	end
end
function UpgradedTurrets_process(id)
	return(GetUserValue(id,"UpgradedTurrets") / 5)
end

function UpgradedSupplies_process(id)
	return(GetUserValue(id,"UpgradedSupplies") / 3)
end


-- ==== Never Gonna Give you Up
function turretKillAchievement(id,vic,wpn)
	if wpn == 253 and GetUserValue(id,"TurretKill") > 4 then
		OpenUnlockAchievement(id,"NotPersonal")
	end
end

function turretKillAchievement_process(id)
	return(GetUserValue(id,"TurretKill") / 5)
end


-- ==== 1337
function time1337_second(id)
	if GetUserValue(id,"Time") > 817 then
		OpenUnlockAchievement(id,"1337")
	end
end

function time1337_process(id)
	return(GetUserValue(id,"Time") / 817)
end

-- ==== Fire In The Hole
function hethrow_projectile(id,w)
	if (w == 51) then
		IncreaseUserValue(id,"HeThrow",1)
		if GetUserValue(id,"HeThrow") > 99 then
			OpenUnlockAchievement(id,"FireInTheHole")
		end
	end
end

function fireinthehole_process(id)
	return(GetUserValue(id,"HeThrow") / 100)
end

-- Going Places
function goingplaces_process(id)
	return(GetUserValue(id,"MoneySpent") / 1000000)
end

function stat_goingplaces(id)
	if (GetUserValue(id,"MoneySpent") > 999999) then
		OpenUnlockAchievement(id,"GoingPlaces")
	end
end


-- Spy License
PlayerSilencerOn = {}
function stat_spylicese(id)
	return(GetUserValue(id,"SilenceKill") / 10)
end

function SpyAttack2(id,m)
	if (m == 1) then
		PlayerSilencerOn[id] = true
	else
		PlayerSilencerOn[id] = false
	end
end

function SelectSilencer(id,w,m)
	SpyAttack2(id,m)
end

function SilencerReset(id)
	PlayerSilencerOn[id] = nil
end

function SilencerKill(id,vic,wpn)
	if PlayerSilencerOn[id] and player(id,"team") ~= player(vic,"team") then
		if (wpn == 1) or (wpn == 32) then
			IncreaseUserValue(id,"SilenceKill",1)
			if GetUserValue(id,"SilenceKill") > 9 then
				OpenUnlockAchievement(id,"SpyLicense")
			end
		end
	end
end


-- ==== Black Bag Operation
SilentMove = {}
SilentMoveKill = {}
function walkAchievementhook(id,x,y,m)
	if (m == 0 and SilentMove[id]) then
		SilentMove[id] = nil
	end
end

function walkAchievementspawn(id)
	SilentMove[id] = true
	SilentMoveKill[id] = false
end
function walkAchievementkill(id)
	SilentMoveKill[id] = true
end

function endroundwalk(id)
	if SilentMove[id] and SilentMoveKill[id] then
		OpenUnlockAchievement(id,"BlackBag")
	end
end


-- ==== Black Bag Operation
TakenDamagePlayers = {}
function TargetHardenedHit(victim,attacker)
	if player(victim,"team") ~= player(attacker,"team") then
		TakenDamagePlayers[victim][attacker] = true
	end
end

function TargetHardenedReset(id)
	TakenDamagePlayers[id] = {}
end

function TargetHardenedRoundEnd(id)
	if player(id,"health") > 0 then
		if TakenDamagePlayers[id] then
			if table.map_length(TakenDamagePlayers[id]) > 4 then
				OpenUnlockAchievement(id,"TargetHardened")
			end
		end
	end
end

for i = 0, 32 do
	TargetHardenedReset(i)
end

-- Revengance
function RevenganceKill(id,vic)
	if player(id,"team") ~= player(vic,"team") then
		if GetUserValue(id,"Revenge") > 9 then
			OpenUnlockAchievement(id,"Revengeance")
		end
	end
end

function RevenganceProgress(id)
	return(GetUserValue(id,"Revenge") / 10)

end

-- Who Let The Doge Out 

function WhoLetTheDogeOutRoundEnd(id)
	if GetUserValue(id,"MVP") > 4 then
		OpenUnlockAchievement(id,"WhoLetTheDogeOut")
	end
end

function WhoLetTheDogeOutRoundProgress(id)
	return(GetUserValue(id,"MVP") / 5)
end


