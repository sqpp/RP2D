
function secToStrFull(sec)
	if sec < 60 then
		return(sec.."s")
	elseif sec < 3600 then
		return(math.floor(sec / 60).."minute(s) "..(sec % 60).."s")
	elseif sec < 86400 then
		return(math.floor(sec / 3600).."hour(s) "..(math.floor(sec / 60) % 60).."min "..(sec % 60).."s")
	else
		return(math.floor(sec / 86400).."day(s) "..(math.floor(sec / 3600) % 24).."h "..(math.floor(sec / 60) % 60).."min "..(sec % 60).."s")
	end
end

function OvalDescription()
	local des = {}
	table.insert(des, {"Overal Time Spent",secToStrFull(GetAllValues("Time"))})
	table.insert(des, {"Shots Fired",GetAllValues("ShotsFired")})
	table.insert(des, {"Total Kills",GetAllValues("Kills")})
	table.insert(des, {"Total Buildings Built",GetAllValues("BuildingBuilding")})
	table.insert(des, {"Meters Walked",GetAllValues("Tiles")})
	table.insert(des, {"Money Spent",GetAllValues("MoneySpent").."$"})
	local count = 0
	for userID, user in pairs (UserManager.data) do
		local var = AchievementsUnlockedVariable(userID)
		count = count + var
	end	
	for userID, user in pairs (UserManager.dataIP) do
		local var = AchievementsUnlockedVariable(userID)
		count = count + var
	end
	table.insert(des, {"Achievements Unlocked",count})
	table.insert(des, {"Knife Kills",GetAllValues("KnifeKills")})
	table.insert(des, {"Off-Screen Damage",GetAllValues("OffScreenDamage").."pts"})
	table.insert(des, {"U.S.G.N User Count",table.map_length(UserManager.data)})
	table.insert(des, {"IP User Count",table.map_length(UserManager.dataIP)})
	return(des)
end

-------------------------
function GraphPlayersCount()
	SetGraphGlobalVariable("Players Played",#player(0,"table") )
end


AddGlobalFunction("second",GraphPlayersCount)
------------------------------------
function sampleF()
	local country = {}
	for userID, user in pairs (UserManager.data) do
		userFlagName = user.flagName
		if userFlagName ~= "none" and userFlagName ~= "[Buggy flagName]" and userFlagName ~= "UNALLOCATED" and userFlagName ~= "Reserved" then
			if country[userFlagName] == nil then
				country[userFlagName] = 1
			else
				country[userFlagName] = country[userFlagName]  + 1
			end
		end
	end
	return(country)
end
----------------------------------------------------

AddGlobalStats("CTWins")
AddGlobalStats("TWins")

function TeamWinCountEndRound(mode)
	if (mode == 2 or mode == 11 or mode == 21 or mode == 22 or mode == 31 or mode == 41 or mode == 51 or mode == 61) then
		IncGlobalStats("CTWins",1)
	end
	if (mode == 1 or mode == 10 or mode == 12 or mode == 20 or mode == 30 or mode == 40 or mode == 50) then
		IncGlobalStats("TWins",1)
	end
end

function sampleA()
	local t = { }	
	t.T = GetGlobalStats("TWins")
	t.CT = GetGlobalStats("CTWins")
	return(t)
end


AddGlobalFunction("endround",TeamWinCountEndRound)
-------------------------------------------
function RoundEndTypeCounting(mode)
	IncGlobalStats("RoundEnd_"..mode,1)
end


RoundEndValueList = {1,10,12,20,30,40,50,2,11,21,22,31,41,51,61}
RoundEndNamesList = {[1] = "Terrorist win (elimination)",[10] = "VIP killed", [12] = "VIP did not escape", [20] = "Bomb detonated", [30] = "Hostages protected",
	[40] = "Blue flag captured",[50] = "All points dominated by T", [60] = "All humans killed (Zombies! game mode)",
	[2] = "Counter-Terrorist win (elimination)",[11] = "VIP escaped",[21] = "Bomb defused", [22] = "Bombsite protected",
	[31] = "Hostages rescued", [41] = "Red flag captured", [51]= "All points dominated by CT", [61]="Survivors survived", [3]="Round draw"}


for i = 1, #RoundEndValueList do
	AddGlobalStats("RoundEnd_"..RoundEndValueList[i])
	
end

function sampleB()
	local t = { }	
	for i = 1, #RoundEndValueList do
		local name = RoundEndNamesList[ RoundEndValueList[i] ]
		t[name] = GetGlobalStats("RoundEnd_"..RoundEndValueList[i])
	end
	return(t)
end

AddGlobalFunction("endround",RoundEndTypeCounting)

--------------------------------------------
function GetTotalPlayers()	
	local count = 0
	count = count + table.map_length(UserManager.data)
	count = count + table.map_length(UserManager.dataIP)
	return(count)
end


function GraphTotalPlayersCount() 
	SetGraphGlobalVariable("Total Players Data",GetTotalPlayers() )
end

AddFunction("team",GraphTotalPlayersCount, true)

--------------------------------------------
AddGlobalStats("Total Kills")

function GraphKill(id)
	IncGlobalStats("Total Kills",1)
	SetGraphGlobalVariable("Total Kills",GetGlobalStats("Total Kills"))
end

AddFunction("kill",GraphKill)

--------------------------------------------
function GraphBuild(id)
	IncGlobalStats("TotalBuilt",1)
	SetGraphGlobalVariable("Buildings Built",GetGlobalStats("TotalBuilt"))
end

AddFunction("build",GraphBuild)
AddGlobalStats("TotalBuilt")